--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,ba)local ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=85,65,20,45,90,46,38,79,95,29,29,56,49,86,78,22,87,46,95,99,92,97,19,72,16,33,52,14,40,27,47,46,68,32,30,21,78,57,86,95,11,59,27,11,71,71,98,37,63,44,87,79 while ba~=72 do if bb>=749 then if bb<=1102 then if bb>=893 then if bb<=978 then if bb<=893 then bb=932 do br=function(cp,cq,cr,cs,cs)local cs,ct,cu=59,59,21,12,90,55,54,88,43,87,26,73,13 while cs~=26 do if ct<=122 then if ct>=101 then if ct>110 then do cu=((cq/ch[cp])%ch[cr])end ct=162 else ct=122 cu=nil end else ct=101 cu=nil end else if ct>=182 then if ct<207 then ct=214 do return cu end else cs=26;end else do cu=(cu-cu%1)end ct=182 end end end end end else if bb<971 then bb=978 ck=(bit_lib and bit_lib.bxor or function(cp,cq)cp=cp%(2^32)cq=cq%(2^32)local q,cr=0,q while cp>0 and cq>0 do local cs,ct=cp%16,cq%16 q=q+ci[cs+1][ct+1]*cr cp=(cp-cs)/16 cq=(cq-ct)/16 cr=cr*16 end q=q+cp*cr+cq*cr return q end)else bb=1015 by=function(q,cp,cq,cr,cr)local cr cr=((q/2^(cp-1))%2^((cq-1)-(cp-1)+1))do return(cr-cr%1);end end end end else if bb>=1064 then if bb<1095 then do cn=function()local q,cp,cq,cr q,cr,cp,cq=bq(bl,co,(co+3))co=(co+4);return((cq*16777216)+(cp*65536)+(cr*256)+q);end end bb=1102 else bb=1131 bs=function()local q q=bq(bl,co,co)do co=(co+1);end do return q;end end end else bb=1064 co=1 end end else if bb>=813 then if bb>=831 then if bb>834 then for q=1,31 do ch[q]=bf bf=(bf*2)end bb=893 else bf=2 bb=860 end else ch={[0]=1}bb=831 end else if bb<763 then bb=767 cl=''else cd=(2^52)bb=813 end end end else if bb<=1285 then if bb>=1216 then if bb<=1216 then bv=function(q,q,q,q)local q,cp,cq,cr=51,53,10,87,13,61,26,52,57,48,39,66,76,27,95 while q~=37 do if cp>=150 then if cp<=150 then co=(co+cq);cp=176 else if cp>179 then q=37;else cp=193 return cr;end end else if cp<=53 then cq,cr=nil cp=95 else if cp>97 then cr=bl:sub(co,(co+cq-1))cp=150 else cp=125 cq=cn()end end end end end bb=1244 else if bb<1280 then bb=1285 do cm=function(...)do return{...},bk('#',...)end end end else bi={}bb=1315 end end else if bb<1170 then bb=1178 cb=function()local q,cp q,cp=bq(bl,co,(co+2))co=(co+2);return((cp*256)+q);end else cg=function()local q,cp,cq,cr,cs,ct,cu,cv=73,50,54,91,58,61,51,83,72,60,22,13,83,87,79,21,45,33 while q~=30 do if cp>=192 then if cp<=273 then if cp<=192 then do ct=br(20,cu,11)end cp=241 else if cp>248 then cv=1 cp=292 else cp=273 cs=(br(0,cu,a)*4294967296+cr)end end else if cp<=292 then cp=317 if 0==ct then do if 0~=cs then ct=1 cv=0 else return(cq*0)end end elseif 2047~=ct then else if 0==cs then do return(cq*(0/0))end else return(cq*(1/0))end end else if cp>321 then q=30;else cp=353 return(cq*(2^(ct-1023))*(cs/cd+cv))end end end else if cp<=89 then if cp>55 then cp=136 cr=cn()else cp=89 cq,cr,cs,ct,cu,cv=nil end else if cp>=152 then if cp>155 then cp=192 do cq=((-1)^br(31,cu,1))end else cp=173 while((cr==0 and cu==0))do return g end end else cp=152 cu=cn()end end end end end bb=1216 end end else if bb>=1407 then if bb<=1407 then bb=1425 bt=function(a,g,q,cp,cp,cp)local cp,cq,cr,cs,ct cs=cf do cr=a[12]end do ct=a[140]end cp=a[35]cq=a[49]return function(...)local a,cs,cu,cv,cw,cx,cy,cz,da a=1 cv=-1 do cz=-1 end do cy={}end cu={...}da=(bk('#',...)-1)do cs={}end cx={}do for cz=0,da do do if(not(cz<cp))then cy[(cz-cp)]=cu[(cz+1)];else do cx[cz]=cu[(cz+1)];end end;end end;end cw=(da-cp+1)while true do local cw,cz,db,dc,dd,de,df,dg,dh,di di=cr[a]dg=di[44]de=di[111]cz=di[186]dh=di[131]cw=di[52]df=di[53]dd=di[k]dc=di[194]db=di[6]if not(dg>46)then if not(di[44]>22)then do if not(dg<11)then if not(dg<17)then do if not(dg<20)then if not(dg<21)then if(dg<22)then do for k=di[186],dc do cx[k]=nil;end;end else do cr[a]=bi[df];end a=dc;end else local k,de,dj k=cz dj={cx[k](bh(cx,k+1,di[194]))}de=0 for dk=k,cw do de=(de+1);cx[dk]=dj[de];end end else if not(dg<18)then if(dg>18)then if not cx[cz]then a=di[194];end;else do if cx[cz]then do a=dc;end end;end end else q=cx[di[cz]]end end end else do if not(dg<14)then if not(dg<15)then do if(dg<16)then do cx[db]=(function()do cx[cz]=bt(ct[dh],nil,q);end end)end else do cx[di[186]]=g[dc];end end end else do return cx[dd][df]end end else if not(dg<12)then if(dg<13)then local k,de,dj de=ct[dc]do k=nil end dj={}k=cj({},{__index=function(dk,dk)local dk=dj[dk];return dk[1][dk[2]];end,__newindex=function(dk,dk,dl)local dk=dj[dk]dk[1][dk[2]]=dl;end;});for dk=1,cw do local dl dl=di[84][dk]if dl[1]then do dj[(dk-1)]={cx,dl[2],nil,nil};end else dj[(dk-1)]={g,dl[2],nil};end;cs[(#cs+1)]=dj;end;cx[cz]=bt(de,k,q);else local k,de,dj,dk,dl dj=cz dk=cw do dl=(dj+2)end k={cx[dj](cx[dj+1],cx[dl])}do for dm=1,dk do cx[(dl+dm)]=k[dm]end end de=cx[(dj+3)]if de then do cx[dl]=de end else do a=di[194];end end;end else do a=((cq[cz]<cx[cw])and dc or a)end end end end end else if not(dg>4)then if not(dg>1)then if(dg<1)then if cz then do cz=false;end cw=dc;do a=(a-1);end else do a=(a+dc+cw);end end else cx[cz]=(cx[dc]%cq[di[52]]);end else if not(dg<3)then if(di[44]>3)then local k,de do de=cz end k=cx[dc]cx[(de+1)]=k;cx[de]=k[cq[cw]];else cx[cz]=(not cx[dc]);end else do cx[di[186]]=cf[di[131]]end end end else if not(dg<8)then if not(dg<9)then if(di[44]>9)then local k k={}while#cs>0 do for de=v,#cs do local v=cs[de]for de=0,#v do local v=v[de]local de=v[1]local dj=v[2]if de==cx and dj>=0 then k[dj]=de[dj]v[1]=k end end end break end return false,1,di[dh];else if not cx[cw]then cx[cz]=cx[cw];a=dc;end;end else local k do k=di[186]end cx[k](bh(cx,(k+1),dc))end else if not(dg>5)then do cx[cz]=(0~=dc);end a=(a+1);else if 6==dg then cx[cz]=cx[dc];else local k k=di[186]cx[k](cx[(k+1)])end end end end end end else do if not(dg>34)then if not(dg<29)then if not(dg<32)then if not(dg<33)then if(dg>33)then cx[di[186]]=(cx[di[194]]/cq[cw]);else cx={};for k=0,da do if(k<cp)then do cx[k]=cu[(k+1)];end else break end;end;end else local k,v,cp,cu cu=cz do v,k=cm(cx[cu](bh(cx,(cu+1),dc)))end cv=(k+cu-1)cp=0 for k=cu,cv do cp=(cp+1);do cx[k]=v[cp];end end;end else if not(dg>29)then if(not(cx[cz]<cx[cw]))then a=dc;end;else if(dg<31)then do return cx[cz]end else cx[di[186]]();end end end else if not(dg>25)then do if not(dg>23)then cx[di[186]]=cf[di[z]]else if(dg<d)then do q[cq[dc]]=cx[di[186]];end else local d do d=cz end cx[d]=cx[d](bh(cx,d+1,dc));end end end else do if not(dg>26)then cx[di[cz]]=cx else if(dg>27)then local d d=cx[di[78]][df]cx[dd][df]=(d..cx[cw]);else cx[cz]=bt(ct[dc],nil,q);end end end end end else do if not(dg<41)then if not(dg>43)then if not(dg>41)then do cx[di[186]][cq[dc]]=cx[di[52]];end else do if(di[44]<43)then cx[cz]=cx[dc]else local d,k k,d=cm(...)for d=1,di[186]do cx[(d-1)]=k[d]end end end end else do if not(dg<45)then if(dg<46)then cr[a]={[52]=0,[44]=dg-35,[186]=0,[53]=0,[194]=1};a=(a-1);else local d,k k=cz d=dc for v=k,d do cx[v]=cy[(v-k)];end;end else cf[cz]=cx[dh]end end end else if not(di[44]<38)then do if not(dg<39)then if(dg<40)then cx[di[186]]=cx[dc][cq[cw]];else g[di[194]]=cx[cz];end else cq=cf[cz](cq)end end else do if not(dg>35)then cx[cz]=q[cq[dc]];else if(dg>36)then cv=di[cz];else cx[cz]=(cx[dc]*cq[di[52]]);end end end end end end end end end else if not(dg<71)then if not(di[44]<83)then do if not(dg>h)then if not(dg<86)then if not(dg>86)then cf[cz]=cf[di[131]]else if 87==dg then if((cx[cz]<cx[di[52]]))then a=dc;end;else cx[cz][cx[dc]]=cx[di[52]];end end else if not(dg<84)then if(dg<85)then local d,g,h d=cz h=cx[d]g=dc for k=1,g do do h[k]=cx[(d+k)]end end;else do cx[cz]=(cx[di[194]]+cq[cw]);end end else cx[cz]=(cx[dc]%cx[cw]);end end else do if not(dg<92)then if not(dg<93)then do if(dg<94)then cx[cz]=(cx[di[194]]/cx[cw]);else cx[cz]=(cx[di[194]]*cx[cw]);end end elseif(cx[cw]~=cx[cz])then a=dc;end else if not(dg>89)then local d,g,h h=di[m]do g=cx[(h+2)]end d=(cx[h]+g)do cx[h]=d;end do if((g>0))then if(not(d>cx[h+1]))then a=dc;cx[(h+3)]=d;end elseif(not(d<cx[h+1]))then a=dc;cx[(h+3)]=d;end end else if(di[44]>90)then local d,g,h,k g=di[186]d=((di[52]-1)*50)k=cx[g]do h=dc end for m=1,h do do k[(d+m)]=cx[(g+m)]end end;else cx[db]=(function()cx[cz]=bt(ct[dh],nil,q);end)end end end end end end else if not(dg>76)then if not(dg<74)then if not(dg>74)then cx[cz]=#cx[dc];else do if(dg<76)then local d do d=cz end do do return bh(cx,d,(d+di[194]))end;end else do cx[db]();end end end end else do if not(dg<72)then if not(di[44]~=72)then local d,g do g=cz end d=cx[dc]cx[(g+1)]=d;cx[g]=d[cx[cw]];else local d d=cz cx[d]=cx[d](cx[d+1]);end else cx[cz]=cq[dc]end end end else if not(dg<80)then if not(dg<81)then if not(dg~=81)then do cf=cx end elseif(cq[cw]~=cx[cz])then a=dc;end else local d,g d=cz g={}for h=1,#cs do local k k=cs[h]for h=0,#k do local m,v,z z=k[h]m=z[1]v=z[2]while m==cx and v>=d do g[v]=m[v];z[1]=g;break end end;end;end else do if not(dg>77)then local d,g,h,k do k=cz end h={cx[k]()}do d=cw end g=0 for m=k,d do g=(g+1);cx[m]=h[g];end else if(dg>78)then if((cx[cz]>cx[cw]))then a=dc;end;else cf[cz]()end end end end end end else if not(dg>58)then if not(dg>52)then if not(di[t]>49)then if not(dg>47)then else if(di[44]>48)then do a=dc;end else if((cq[cz]<cx[di[52]]))then do a=dc;end end;end end else if not(dg<51)then if not(dg~=51)then local d d=cz cx[d]=cx[d](bh(cx,d+1,cv));else end else cx[cz]=cx[dc][cx[cw]];end end else do if not(dg<56)then do if not(dg<57)then if 57==di[44]then cx[cz]=(cx[dc]-cx[cw]);else local d,g,h g=cz h={cx[g](cx[g+w])}d=0 for k=g,cw do d=(d+1);do cx[k]=h[d];end end end else local d,g d=cz g={}if(#cs>0)then do for h=1,#cs do local k do k=cs[h]end for h=0,#k do local m,t,v t=k[h]v=t[1]m=t[2]do if(v==cx and m>=0)then do g[m]=v[m]end t[1]=g end end end end end end return cx[d],cx[(d+1)]end end else if not(dg<54)then if(dg<55)then cr[a]=bi[df];a=di[194];else cx[cz][cq[dc]]=cq[di[x]];end else do cx[di[186]]=(cx[dc]^cx[cw]);end end end end end else if not(dg>64)then do if not(dg<62)then do if not(dg>62)then a=((cx[di[186]]<cx[cw])and di[194]or a)else if not(dg~=63)then local d d=cz do return cx[d](bh(cx,(d+1),di[l]))end;else end end end else if not(dg<60)then if not(dg~=60)then cx[cz]=(cx[dc]+cx[di[52]]);else cx[cz]=nil;end else local d,g d=di[194]do g=cx[d]end for h=(d+i),cw do g=(g..cx[h]);end;cx[cz]=g;end end end else if not(dg<68)then if not(dg<69)then do if(dg>69)then cx[di[186]]=-cx[dc];else local d,g d=cz g={}if(#cs>0)then for h=1,#cs do local i i=cs[h]for h=0,#i do local k,l,m k=i[h]l=k[1]m=k[2]while(l==cx and m>=0)do g[m]=l[m]k[1]=g break end end end end return bh(cx,d,cv);end end else do cx[cz]=q[cq[dc]][cq[cw]];end end else if not(dg>65)then local d,g,h d=cz g=cx[d]h=cx[(d+2)]if((h>0))then if((g>cx[d+1]))then a=dc;else cx[(d+3)]=g;end elseif((g<cx[d+1]))then a=dc;else cx[(d+3)]=g;end else if(dg>66)then cx[cz]={};else do cf[cz]={}end end end end end end end end a=(a+1);end;end;end else if bb<1439 then bb=1447 return bt(bd(bj()),{},bj())();else ba=72;end end else if bb>=1332 then if bb<1373 then bb=1379 cf={}else bu={}bb=1407 end else bb=1332 bd=function(a,d,d)local d,g,h,i,k,l,m,q=91,48,16,38,58,51,73,44,72,37,27,53,30,73,67,62,45,30,85,56,16,68,79,55 while d~=54 do if g>=267 then if g<=351 then if g<=308 then if g<300 then g=308 for t=y,k do local v,w,x,y=81,34,76,87,92,79,32,85,38,42,40,77,45,18,20,71 while v~=41 do if w<=91 then if w>=67 then if w<89 then y=bs()w=91 else x=nil w=133 end else w=67 x,y=nil end else if w<=133 then do if(2==y)then x=(not(bs()==0));elseif(1==y)then x=cg();elseif(4==y)then do x=bv();end elseif(not(y~=3))then x=a[bv()];end;end w=157 else if w<171 then w=178 l[t]=x;else v=41;end end end end end else h[49]=l g=331 end else if g>335 then do h[140]=q;end g=385 else g=351 for a=1,cn()do q[a-1]=bd();end end end else if g<=420 then if g>389 then g=439 for a=1,cn()do local t,v,w,x,y,z=78,45,10,53,20,27,88,74,15,51,14,88,47,38,42,67,70,78,39,13,13,74,34,31 while t~=42 do if v>=352 then if v>=505 then if v<=523 then if v>508 then z[p]=-z[186]v=552 else v=523 z[53]=by(x,12,20);end else if v<=552 then v=601 do z[6]=-z[52]end else if v>608 then t=42;else v=616 do i[a]=z;end end end end else if v>=432 then if v<469 then v=473 z[194]=by(w,12,33);else v=505 z[52]=by(x,21,e);end else if v>355 then v=432 z[186]=by(x,3,11);else v=383 z[44]=by(w,1,11);end end end else if v<=171 then if v<=87 then if v<85 then v=87 w,x,y,z=nil else do z={{},nil,nil}end v=123 end else if v<168 then do z[111]=bs();end v=171 else v=219 z[84]={};end end else if v>=272 then if v>=309 then if v>314 then v=352 z[f]=y else v=328 y=by(x,1,2)end else do w=cn()end v=309 end else if v>225 then x=cn()v=272 else v=252 if 1==bs()then for a=1,bs()do z[84][a]={bs()==0,cn()}end end end end end end end end else h[35]=bs();g=420 end else if g>=482 then if g<510 then g=515 do return h;end else d=54;end else g=482 h[12]=i;end end end else if g<=137 then if g>=98 then if g>101 then h={}g=155 else g=137 q={}end else if g<65 then g=69 h,i,k,l,m,q=nil else i={}g=98 end end else if g>=224 then if g<243 then g=249 k=cn()else g=267 l={}end else if g>162 then for a=(#bi+1),(#bi+m)do local d,e,f,h,i=86,60,90,66,15,44,26,23,42,54,10,74,16,87,35,49,76,76,99,17,79,35,82 while d~=43 do if e>=289 then if e>=419 then if e<=454 then if e<446 then e=454 do f[78]=-f[186]end else f[6]=-f[52]e=481 end else if e>486 then break else e=509 bi[a]=f;end end else if e<=331 then if e<329 then f[186]=by(h,3,11);e=331 else f[131]=by(h,12,20);e=361 end else if e<376 then e=379 f[52]=by(h,21,29);else do f[194]=by(i,12,33);end e=419 end end end else if e>=176 then if e<=210 then if e<204 then do i=cn()end e=210 else do f[53]=bs();end e=228 end else if e<253 then f[106]=by(h,1,2);e=256 else e=289 f[44]=by(i,1,11);end end else if e>=115 then if e<130 then e=135 f[111]=bs();else e=176 h=cn()end else if e<91 then e=95 f,h,i=nil else f={}e=115 end end end end end end g=224 else do m=cn()end g=183 end end end end end end end end end end else if bb>=361 then if bb>=543 then if bb>=634 then if bb<=634 then bb=680 do for a=0,255 do ce[a]=cc(a);end end else if bb<691 then bb=700 do bl=bnfunction(a,d,d)return ce[bp(a,16)]end)end else bb=749 ci={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,b,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,n,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,j,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{u,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,o,7,6,1,0,3,2,},{14,15,12,c,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,s,12,11,10,9,8,7,6,r,4,3,2,1,0,},nil,nil,nil}end end else if bb<=543 then bh=(unpack or table.unpack)bb=559 else if bb<582 then bp=tonumber bb=587 else ce={}bb=634 end end end else if bb>=445 then if bb<=445 then bx=(function(a,b,b)do if'number'==bo(a)then return true else return false end end end)bb=491 else if bb>499 then be=math.floor bb=543 else bb=525 do bw=math.abs end end end else if bb<390 then bb=399 bk=select else bb=445 do bo=type end end end end else if bb>=200 then if bb<=266 then if bb<=200 then bb=222 bc=string.rep else if bb<259 then ca=table.concat bb=266 else bg=table.insert bb=288 end end else if bb<=288 then do bz=math.ldexp end bb=317 else if bb>322 then bb=361 cj=setmetatable else bb=336 bj=(getfenv or function()return _ENV end)end end end else if bb<=89 then if bb>73 then bq=string.byte bb=121 else bb=89 bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=nil end else if bb<=121 then bb=138 cc=string.char else if bb<154 then bm=string.sub bb=161 else bn=string.gsub bb=200 end end end end end end end end)(20,7,13,25,29,106,0,88,1,12,78,194,186,2,4,78,1,5,13,44,11,1,1,52,1,131)
